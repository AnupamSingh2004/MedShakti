server {
    listen 80;
    server_name medshakti.com www.medshakti.com api.medshakti.com;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name medshakti.com www.medshakti.com api.medshakti.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/medshakti.crt;
    ssl_certificate_key /etc/nginx/ssl/medshakti.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;

    # API routes with enhanced security
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        proxy_pass http://api_gateway_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Enhanced timeouts for production
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings for better performance
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Enable HTTP/1.1 keepalive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Authentication with stricter rate limiting
    location /api/auth/ {
        limit_req zone=login burst=3 nodelay;
        
        proxy_pass http://auth_service:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # File uploads with size and rate limits
    location /api/prescriptions/upload/ {
        limit_req zone=upload burst=2 nodelay;
        client_max_body_size 10M;
        
        proxy_pass http://prescription_service:8000/upload/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for file processing
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Static files with aggressive caching
    location /static/ {
        alias /app/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Enable gzip for static files
        gzip_static on;
    }

    # Media files with moderate caching
    location /media/ {
        alias /app/media/;
        expires 30d;
        add_header Cache-Control "public";
        
        # Security for uploaded files
        location ~* \.(php|jsp|cgi|pl|sh)$ {
            deny all;
        }
    }

    # Health check (no logging)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Block common attack patterns
    location ~* \.(git|svn|htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}